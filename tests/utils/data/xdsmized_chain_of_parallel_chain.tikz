
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{"C:/Users/nicolas.roussouly/Code/GEMSEO/gemseo_fork/.tox/py39/lib/site-packages/pyxdsm/diagram_styles"}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
&
\node [DataIO] (output_Opt) {$x\_1^{(0)}$};&
&
&
&
&
&
&
\\
%Row 1
\node [DataIO] (left_output_Opt) {$x\_7^*,  x\_5^*$};&
\node [Optimization] (Opt) {$\text{1,7-2:Optimizer}$};&
\node [DataInter] (Opt-Dis1) {$x\_1$};&
&
&
&
&
&
\\
%Row 2
\node [DataIO] (left_output_Dis1) {$x\_2^*$};&
&
\node [Function] (Dis1) {$\text{2:AnalyticDiscipline}$};&
\node [DataInter] (Dis1-Dis2) {$x\_2$};&
\node [DataInter] (Dis1-Dis3) {$x\_2$};&
&
&
&
\\
%Row 3
\node [DataIO] (left_output_Dis2) {$x\_3^*$};&
&
&
\node [Function] (Dis2) {$\text{3:AnalyticDiscipline}$};&
&
&
\node [DataInter] (Dis2-Dis5) {$x\_3$};&
&
\\
%Row 4
\node [DataIO] (left_output_Dis3) {$x\_4^*$};&
&
&
&
\node [Function] (Dis3) {$\text{3:AnalyticDiscipline}$};&
\node [DataInter] (Dis3-Dis4) {$x\_4$};&
&
&
\\
%Row 5
&
\node [DataInter] (Dis4-Opt) {$x\_5$};&
&
&
&
\node [Function] (Dis4) {$\text{4:AnalyticDiscipline}$};&
&
\node [DataInter] (Dis4-Dis6) {$x\_5$};&
\\
%Row 6
\node [DataIO] (left_output_Dis5) {$x\_6^*$};&
&
&
&
&
&
\node [Function] (Dis5) {$\text{5:AnalyticDiscipline}$};&
&
\\
%Row 7
&
\node [DataInter] (Dis6-Opt) {$x\_7$};&
&
&
&
&
&
\node [Function] (Dis6) {$\text{6:AnalyticDiscipline}$};&
\\
%Row 8
&
&
&
&
&
&
&
&
\\
};

% XDSM process chains
{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Opt);
\chainin (Dis1) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis1);
\chainin (Dis2) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis1);
\chainin (Dis3) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis3);
\chainin (Dis4) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis2);
\chainin (Dis5) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis4);
\chainin (Dis5) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis5);
\chainin (Dis6) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (Dis6);
\chainin (Opt) [join=by ProcessHVA];
\end{pgfonlayer}
}

\begin{pgfonlayer}{data}
\path
% Horizontal edges
(Opt) edge [DataLine] (Opt-Dis1)
(Dis4) edge [DataLine] (Dis4-Opt)
(Dis6) edge [DataLine] (Dis6-Opt)
(Dis4) edge [DataLine] (Dis4-Opt)
(Dis6) edge [DataLine] (Dis6-Opt)
(Dis1) edge [DataLine] (Dis1-Dis2)
(Dis1) edge [DataLine] (Dis1-Dis3)
(Dis2) edge [DataLine] (Dis2-Dis5)
(Dis3) edge [DataLine] (Dis3-Dis4)
(Dis4) edge [DataLine] (Dis4-Dis6)
(Opt) edge [DataLine] (left_output_Opt)
(Dis1) edge [DataLine] (left_output_Dis1)
(Dis2) edge [DataLine] (left_output_Dis2)
(Dis3) edge [DataLine] (left_output_Dis3)
(Dis5) edge [DataLine] (left_output_Dis5)
% Vertical edges
(Opt-Dis1) edge [DataLine] (Dis1)
(Dis4-Opt) edge [DataLine] (Opt)
(Dis6-Opt) edge [DataLine] (Opt)
(Dis4-Opt) edge [DataLine] (Opt)
(Dis6-Opt) edge [DataLine] (Opt)
(Dis1-Dis2) edge [DataLine] (Dis2)
(Dis1-Dis3) edge [DataLine] (Dis3)
(Dis2-Dis5) edge [DataLine] (Dis5)
(Dis3-Dis4) edge [DataLine] (Dis4)
(Dis4-Dis6) edge [DataLine] (Dis6)
(Opt) edge [DataLine] (output_Opt);
\end{pgfonlayer}

\end{tikzpicture}
