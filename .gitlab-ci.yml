include:
  - remote: "https://gitlab.com/gemseo/dev/ci-includes/-/raw/main/base.yml"

variables:
  TEST_ALL_ENVS:
    value: "false"
    description: "Whether to run the tox tests for all python versions and all platforms."
  TOX_EXE: tox4

.tags:
  - saas-linux-medium-amd64
  - windows-server-2012

# Base test job, common to all the tests jobs.
test:
  extends:
    - .test-base
  parallel:
    matrix:
      - TAG: !reference [.tags]
        TOX_ENV_NAME:
          - py39-coverage
  tags:
    - $TAG

# Define jobs for minor python env with this extended parent.
extended-test:
  extends:
    - test
  rules:
    # Always run for MR or commits pushed to the master branch.
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: always
    # For selecting from gitlab UI.
    - if: '$TEST_ALL_ENVS == "false"'
      when: never
    - !reference [test, rules]
  parallel:
    matrix:
      - TAG: !reference [.tags]
        TOX_ENV_NAME:
          - py38-coverage
          - py310-coverage

# This job creates a distribution from new commit on the develop branch and uploads it to the gitlab registry.
publish-gitlab:
  extends:
    - .publish-base
  variables:
    TWINE_PASSWORD: $CI_JOB_TOKEN
    TWINE_USERNAME: gitlab-ci-token
    TWINE_REPOSITORY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    GITLAB_TOKEN: $GITLAB_CI_AND_PUSH_TOKEN
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
  before_script:
    # Tags are necessary for setuptools-scm to determine the version,
    # but gitlab makes shallow fetch by default.
    - git fetch --tags --unshallow
