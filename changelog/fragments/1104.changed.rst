API changes from old to new:

- ``OptimizationProblem.get_scalar_constraint_names`` (method): ``OptimizationProblem.scalar_constraint_names`` (property).
- ``OptimizationProblem.is_max_iter_reached`` (method): ``OptimizationProblem.is_max_iter_reached`` (property).
- ``OptimizationProblem.get_eq_constraints``: ``OptimizationProblem.constraints.get_equality_constraints()``.
- ``OptimizationProblem.get_ineq_constraints``: ``OptimizationProblem.constraints.get_inequality_constraints()``.
- ``OptimizationProblem.get_ineq_constraints_number``: removed; use ``len(optimization_problem.constraints.get_inequality_constraints())`` instead.
- ``OptimizationProblem.get_eq_constraints_number``: removed; use ``len(optimization_problem.constraints.get_equality_constraints())`` instead.
- ``OptimizationProblem.get_constraints_number``: removed; use ``len(optimization_problem.constraints)`` instead.
- ``OptimizationProblem.get_design_variable_names`` (method): ``OptimizationProblem.design_variable_names`` (property).
- ``OptimizationProblem.get_all_function_name`` (method): ``OptimizationProblem.function_names`` (property).
- ``OptimizationProblem.has_eq_constraints``: removed; use ``bool(optimization_problem.constraints.get_equality_constraints())`` instead, e.g. ``if optimization_problem.constraints.get_equality_constraints()``.
- ``OptimizationProblem.has_ineq_constraints``: removed; use ``bool(optimization_problem.constraints.get_inequality_constraints())`` instead, e.g. ``if optimization_problem.constraints.get_inequality_constraints()``.
- ``OptimizationProblem.has_constraints``: removed; use ``bool(optimization_problem.constraints)`` instead, e.g. ``if optimization_problem.constraints``.
- ``OptimizationProblem.has_nonlinear_constraints``: removed as it did not check whether the problem had non-linear constraints but constraints.
- ``OptimizationProblem.get_dimension``: removed; use ``OptimizationProblem.dimension`` instead.
- ``OptimizationProblem.check_format``: removed as it was only used internally.
- ``OptimizationProblem.get_eq_cstr_total_dim``: removed; use ``OptimizationProblem.constraints.get_equality_constraints().dimension`` instead.
- ``OptimizationProblem.get_ineq_cstr_total_dim``: removed; use ``OptimizationProblem.constraints.get_inequality_constraints().dimension`` instead.
- ``OptimizationProblem.get_optimum`` (method): ``OptimizationProblem.optimum`` (property).
- ``OptimizationProblem.current_names``: ``OptimizationProblem.original_to_current_names``.
- ``OptimizationProblem.get_constraint_names``: removed; use ``OptimizationProblem.constraints.get_names`` instead.
- ``OptimizationProblem.get_objective_name`` (method): ``OptimizationProblem.objective_name`` (property) and ``OptimizationProblem.standardized_objective_name`` (property)
- ``OptimizationProblem.nonproc_objective``: ``OptimizationProblem.objective.original``.
- ``OptimizationProblem.nonproc_constraints`` (property): ``OptimizationProblem.constraints.get_originals`` (method).
- ``OptimizationProblem.nonproc_observables`` (property): ``OptimizationProblem.observables.get_originals`` (method).
- ``OptimizationProblem.nonproc_new_iter_observables` (property)`: ``OptimizationProblem.new_iter_observables.get_originals`` (method).
- ``OptimizationProblem.get_nonproc_objective``: removed; use ``OptimizationProblem.objective.original`` instead.
- ``OptimizationProblem.get_nonproc_constraints``: removed; use ``OptimizationProblem.constraints.get_originals`` instead.
- ``OptimizationProblem.get_all_functions``: removed; use ``OptimizationProblem.original_functions`` and ``OptimizationProblem.functions`` instead.
- ``OptimizationProblem.DESIGN_VAR_NAMES``: removed as it was no longer used.
- ``OptimizationProblem.DESIGN_VAR_SIZE``: removed as it was no longer used.
- ``OptimizationProblem.DESIGN_SPACE_ATTRS``: removed as it was no longer used.
- ``OptimizationProblem.FUNCTIONS_ATTRS``: removed as it was no longer used.
- ``OptimizationProblem.DESIGN_SPACE_GROUP``: removed as it was no longer used.
- ``OptimizationProblem.HDF_NODE_PATH``: removed as it was no longer used.
- ``OptimizationProblem.OPT_DESCR_GROUP``: removed as it was only used internally.
- ``OptimizationProblem.OBJECTIVE_GROUP``: removed as it was only used internally.
- ``OptimizationProblem.SOLUTION_GROUP``: removed as it was only used internally.
- ``OptimizationProblem.CONSTRAINTS_GROUP``: removed as it was only used internally.
- ``OptimizationProblem.OBSERVABLES_GROUP``: removed as it was only used internally.
- ``OptimizationProblem._OPTIM_DESCRIPTION``: removed as it was only used internally.
- ``OptimizationProblem.KKT_RESIDUAL_NORM``: removed as it was only used internally.
- ``OptimizationProblem.HDF5_FORMAT``: removed; use ``OptimizationProblem.HistoryFileFormat.HDF5`` instead.
- ``OptimizationProblem.GGOBI_FORMAT``: removed; use ``OptimizationProblem.HistoryFileFormat.GGOBI`` instead.
- ``OptimizationProblem.add_eq_constraint``: removed; use ``OptimizationProblem.add_constraint`` with ``constraint_type="eq"`` instead.
- ``OptimizationProblem.add_ineq_constraint``: removed; use ``OptimizationProblem.add_constraint`` with ``constraint_type="ineq"`` instead.
- ``OptimizationProblem.OptimumType``: removed; use the namedtuple ``OptimizationProblem.Solution`` instead.
- ``OptimizationProblem.ineq_tolerance``: removed; use ``Optimization.tolerances.inequality`` instead.
- ``OptimizationProblem.eq_tolerance``: removed; use ``Optimization.tolerances.equality`` instead.
- ``OptimizationProblem.preprocess_options``: removed as this dictionary was only used as ``optimization_problem.preprocess_options.get("is_function_input_normalized", False)``; use ``optimization_problem.objective.expects_normalized_inputs`` instead.
- ``OptimizationProblem.get_active_ineq_constraints``: removed; use ``OptimizationProblem.constraints.get_active`` instead.
- ``OptimizationProblem.execute_observables_callback``: removed; use ``OptimizationProblem.new_iter_observables.evaluate`` instead.
- ``OptimizationProblem.aggregate_constraint``: removed; use ``OptimizationProblem.constraints.aggregate`` instead.
- ``OptimizationProblem.original_to_current_names``: removed; use ``OptimizationProblem.constraints.original_to_current_names`` instead.
- ``OptimizationProblem.get_observable``: removed; use ``OptimizationProblem.observables.get_from_name`` instead.
- ``OptimizationProblem.is_point_feasible``: removed; use ``OptimizationProblem.constraints.is_point_feasible`` instead.
- ``OptimizationProblem.get_feasible_points``: removed; use ``OptimizationProblem.history.feasible_points`` instead.
- ``OptimizationProblem.check_design_point_is_feasible``: removed; use ``OptimizationProblem.history.check_design_point_is_feasible`` instead.
- ``OptimizationProblem.get_number_of_unsatisfied_constraints``: removed; use ``OptimizationProblem.constraints.get_number_of_unsatisfied_constraints`` instead.
- ``OptimizationProblem.get_data_by_names``: removed; use ``OptimizationProblem.history.get_data_by_names`` instead.
- ``OptimizationProblem.get_last_point``: removed; use ``OptimizationProblem.history.last_point`` instead.
- ``OptimizationProblem.activate_bound_check`` renamed to ``OptimizationProblem.check_bounds``.
- ``OptimizationProblem``'s ``input_database`` argument renamed to ``database``.
- ``OptimizationProblem.variable_names`` removed; use ``OptimizationProblem.design_space.variable_names`` instead.
- ``OptimizationProblem.dimension`` removed; use ``OptimizationProblem.design_space.dimension`` instead.
- ``OptimizationProblem.add_callback`` renamed to ``OptimizationProblem.add_listener``, its ``each_new_iter`` argument to ``at_each_iteration`` and its ``each_store`` argument to ``at_each_function_call``.
- ``OptimizationProblem.evaluate_functions``'s ``eval_jac`` argument renamed to ``compute_jacobians``.
- ``OptimizationProblem.evaluate_functions``'s ``eval_observables`` argument renamed to ``evaluate_observables``.
- ``OptimizationProblem.evaluate_functions``'s ``eval_obj`` argument renamed to ``evaluate_objective``.
- ``OptimizationProblem.evaluate_functions``'s ``x_vect`` argument renamed to ``design_vector``.
- ``OptimizationProblem.evaluate_functions``'s ``normalize`` argument renamed to ``design_vector_is_normalized``.
- ``OptimizationProblem.ProblemType``: removed; use a boolean mechanism instead to check if the the problem is linear.
- ``OptimizationProblem.pb_type``: removed; use the boolean property ``is_linear`` instead.
- ``OptimizationProblem``'s ``pb_type``: removed; use the boolean argument ``is_linear`` instead.
- ``OptimizationProblem.clear_listeners``: removed as it was no longer used; use ``EvaluationProblem.database.clear_listeners`` instead.
- ``OptimizationProblem``'s ``fd_step`` attribute and argument renamed to ``differentiation_step``.
- ``OptimizationProblem``'s ``database`` argument can no longer be a file path and the ``hdf_node_path`` argument has been removed; use ``Database.from_hdf(file_path, hdf_node_path=hdf_node_path)`` to pass a ``Database`` relying on a HDF5 file.
- ``OptimizationProblem``'s ``get_x0_normalized`` removed; use ``OptimizationProblem.design_space.get_current_value`` instead.
